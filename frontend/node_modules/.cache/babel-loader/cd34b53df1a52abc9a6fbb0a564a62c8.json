{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mksgalvao/Desktop/GuideSmiths_challenge/guide-smiths-challenge/frontend/src/components/PhoneWrapper/PhonesWrapper.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPhonesList } from \"../../actions/phonesActions\";\nimport { CardComponent } from \"../CardComponent/CardComponent\";\nimport { phoneWrapperStyles } from \"./PhonesWrapperStyle\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { FormComponent } from \"../FormComponent/FormComponent\";\nimport { DeleteModalComponent } from \"../DeleteModalComponent/DeleteModalComponent\"; // should be replaced for a card props type\n\nexport const PhonesWrapper = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = phoneWrapperStyles();\n  let history = useHistory();\n  useEffect(() => {\n    dispatch(getPhonesList());\n  }, [dispatch]); //@ts-ignore\n  //should remove it\n\n  const phones = useSelector(state => state.phones.phones); //@ts-ignore\n\n  const isLoading = useSelector(state => state.phones.loading);\n  const [filteredPhones, setFilteredPhones] = useState(phones);\n  const [showModal, setShowModal] = useState({\n    isOpen: false,\n    type: \"edit\"\n  });\n  const [clickedPhone, setClickedPhone] = useState();\n  const [deleteModal, setDeleteModal] = useState(false);\n  useEffect(() => {\n    setFilteredPhones(phones);\n  }, [phones]);\n\n  const onDeleteClick = (e, phone) => {\n    setClickedPhone(phone);\n    e.stopPropagation();\n    setDeleteModal(!deleteModal);\n  };\n\n  const onCardClick = phone => {\n    history.push({\n      pathname: `/info/${phone.name}`,\n      state: {\n        phone: phone\n      }\n    });\n  };\n\n  const onEditClick = (e, phone) => {\n    setClickedPhone(phone);\n    e.stopPropagation();\n    setShowModal({\n      isOpen: !showModal.isOpen,\n      type: \"edit\"\n    });\n  };\n\n  const handleAddNewPhone = e => {\n    e.stopPropagation();\n    setShowModal({\n      isOpen: !showModal.isOpen,\n      type: \"add\"\n    });\n  };\n\n  const onSearchPhone = event => {\n    let searchTerm = event.target.value;\n\n    if (searchTerm.length === 1) {\n      return setFilteredPhones(phones);\n    }\n\n    const searching = filteredPhones.filter(phone => phone.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredPhones(searching);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading || !filteredPhones ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.phoneWrapperHeader,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.search,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.searchIcon,\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n            placeholder: \"Search\\u2026\",\n            classes: {\n              root: classes.inputRoot,\n              input: classes.inputInput\n            },\n            inputProps: {\n              \"aria-label\": \"search\"\n            },\n            onChange: onSearchPhone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cardsWrapper,\n        children: filteredPhones.map((phone, index) => /*#__PURE__*/_jsxDEV(CardComponent, {\n          phone: phone,\n          onCardClick: onCardClick,\n          onDelete: e => {\n            onDeleteClick(e, phone);\n          },\n          onEdit: e => {\n            onEditClick(e, phone);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), showModal.isOpen && /*#__PURE__*/_jsxDEV(FormComponent, {\n        showModal: showModal,\n        phone: clickedPhone ? clickedPhone : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), deleteModal && /*#__PURE__*/_jsxDEV(DeleteModalComponent, {\n        showModal: deleteModal,\n        phone: clickedPhone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        className: classes.addButton,\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: handleAddNewPhone,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhonesWrapper, \"W5Yc1BsuYxwvchk6sP7e0fyD9aY=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = PhonesWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhonesWrapper\");","map":{"version":3,"sources":["/home/mksgalvao/Desktop/GuideSmiths_challenge/guide-smiths-challenge/frontend/src/components/PhoneWrapper/PhonesWrapper.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","getPhonesList","CardComponent","phoneWrapperStyles","InputBase","CircularProgress","SearchIcon","useHistory","Fab","AddIcon","FormComponent","DeleteModalComponent","PhonesWrapper","props","dispatch","classes","history","phones","state","isLoading","loading","filteredPhones","setFilteredPhones","showModal","setShowModal","isOpen","type","clickedPhone","setClickedPhone","deleteModal","setDeleteModal","onDeleteClick","e","phone","stopPropagation","onCardClick","push","pathname","name","onEditClick","handleAddNewPhone","onSearchPhone","event","searchTerm","target","value","length","searching","filter","toLowerCase","includes","phoneWrapperHeader","search","searchIcon","root","inputRoot","input","inputInput","cardsWrapper","map","index","addButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPhonesList } from \"../../actions/phonesActions\";\nimport { CardComponent } from \"../CardComponent/CardComponent\";\nimport { phoneWrapperStyles } from \"./PhonesWrapperStyle\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { FormComponent } from \"../FormComponent/FormComponent\";\nimport { DeleteModalComponent } from \"../DeleteModalComponent/DeleteModalComponent\";\n\n// should be replaced for a card props type\nexport const PhonesWrapper = (props: any) => {\n  const dispatch = useDispatch();\n  const classes = phoneWrapperStyles();\n  let history = useHistory();\n\n  useEffect(() => {\n    dispatch(getPhonesList());\n  }, [dispatch]);\n  //@ts-ignore\n  //should remove it\n  const phones = useSelector((state) => state.phones.phones);\n  //@ts-ignore\n  const isLoading = useSelector((state) => state.phones.loading);\n\n  const [filteredPhones, setFilteredPhones] = useState(phones);\n  const [showModal, setShowModal] = useState({ isOpen: false, type: \"edit\" });\n  const [clickedPhone, setClickedPhone] = useState();\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  useEffect(() => {\n    setFilteredPhones(phones);\n  }, [phones]);\n\n  const onDeleteClick = (e: React.MouseEvent<HTMLElement>, phone: any) => {\n    setClickedPhone(phone);\n    e.stopPropagation();\n\n    setDeleteModal(!deleteModal);\n  };\n\n  const onCardClick = (phone: any) => {\n    history.push({\n      pathname: `/info/${phone.name}`,\n      state: { phone: phone },\n    });\n  };\n  const onEditClick = (e: React.MouseEvent<HTMLElement>, phone: any) => {\n    setClickedPhone(phone);\n    e.stopPropagation();\n\n    setShowModal({ isOpen: !showModal.isOpen, type: \"edit\" });\n  };\n\n  const handleAddNewPhone = (e: React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n\n    setShowModal({ isOpen: !showModal.isOpen, type: \"add\" });\n  };\n\n  const onSearchPhone = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let searchTerm = event.target.value;\n\n    if (searchTerm.length === 1) {\n      return setFilteredPhones(phones);\n    }\n\n    const searching = filteredPhones.filter((phone: any) =>\n      phone.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setFilteredPhones(searching);\n  };\n  return (\n    <div>\n      {isLoading || !filteredPhones ? (\n        <>\n          <CircularProgress color=\"secondary\" />\n        </>\n      ) : (\n        <>\n          <div className={classes.phoneWrapperHeader}>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n                onChange={onSearchPhone}\n              />\n            </div>\n          </div>\n          <div className={classes.cardsWrapper}>\n            {filteredPhones.map((phone: any, index: number) => (\n              <CardComponent\n                key={index}\n                phone={phone}\n                onCardClick={onCardClick}\n                onDelete={(e: React.MouseEvent<HTMLElement>) => {\n                  onDeleteClick(e, phone);\n                }}\n                onEdit={(e: React.MouseEvent<HTMLElement>) => {\n                  onEditClick(e, phone);\n                }}\n              />\n            ))}\n          </div>\n          {showModal.isOpen && (\n            <FormComponent\n              showModal={showModal}\n              phone={clickedPhone ? clickedPhone : \"\"}\n            />\n          )}\n\n          {deleteModal && (\n            <DeleteModalComponent\n              showModal={deleteModal}\n              phone={clickedPhone}\n            />\n          )}\n          <Fab\n            className={classes.addButton}\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={handleAddNewPhone}\n          >\n            <AddIcon />\n          </Fab>\n        </>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}