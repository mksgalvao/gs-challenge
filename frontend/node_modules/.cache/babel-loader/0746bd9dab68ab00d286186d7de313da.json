{"ast":null,"code":"import { PhoneService } from \"../services/phoneService/phoneService\";\nexport const GET_PHONES_SUCCESS = \"GET_PHONES_SUCCESS\";\nexport const GET_PHONES_ERROR = \"GET_PHONES_ERROR\";\nexport const GET_PHONES_LOADING = \"GET_PHONES_LOADING\";\nexport const DELETE_PHONE_SUCCESS = \"DELETE_PHONE_SUCCESS\";\nexport const DELETE_PHONE_ERROR = \"DELETE_PHONE_ERROR\";\nexport const DELETE_PHONE_LOADING = \"DELETE_PHONE_LOADING\";\nexport const ADD_PHONE_SUCCESS = \"ADD_PHONE_SUCCESS\";\nexport const ADD_PHONE_ERROR = \"ADD_PHONE_ERROR\";\nexport const ADD_PHONE_LOADING = \"ADD_PHONE_LOADING\";\nexport const UPDATE_PHONE_SUCCESS = \"UPDATE_PHONE_SUCCESS\";\nexport const UPDATE_PHONE_ERROR = \"UPDATE_PHONE_ERROR\";\nexport const UPDATE_PHONE_LOADING = \"UPDATE_PHONE_LOADING\";\nexport const getPhonesList = () => dispatch => {\n  dispatch({\n    type: GET_PHONES_LOADING\n  });\n  const phonesService = new PhoneService(\"http://localhost:8080\");\n  phonesService.getPhones().then(response => {\n    if (response.status === 200) {\n      dispatch({\n        type: GET_PHONES_SUCCESS,\n        data: response.data\n      });\n    } else {\n      dispatch({\n        type: GET_PHONES_ERROR\n      });\n    }\n  });\n};\nexport const addPhone = phone => dispatch => {\n  dispatch({\n    type: ADD_PHONE_LOADING\n  });\n  const phonesService = new PhoneService(\"http://localhost:8080\");\n  phonesService.addPhone(phone).then(response => {\n    if (response.status === 200) {\n      dispatch({\n        type: ADD_PHONE_SUCCESS,\n        data: response.data\n      });\n    } else {\n      dispatch({\n        type: ADD_PHONE_ERROR\n      });\n    }\n  });\n};\nexport const deletePhone = phoneId => dispatch => {\n  dispatch({\n    type: DELETE_PHONE_LOADING\n  });\n  const phonesService = new PhoneService(\"http://localhost:8080\");\n  phonesService.deletePhone(phoneId).then(response => {\n    if (response.status === 200) {\n      dispatch({\n        type: DELETE_PHONE_SUCCESS,\n        data: response.data\n      });\n    } else {\n      dispatch({\n        type: DELETE_PHONE_ERROR\n      });\n    }\n  });\n};\nexport const updatePhone = phone => dispatch => {\n  dispatch({\n    type: UPDATE_PHONE_LOADING\n  });\n  const phonesService = new PhoneService(\"http://localhost:8080\");\n  phonesService.updatePhone(phone).then(response => {\n    if (response.status === 200) {\n      dispatch({\n        type: UPDATE_PHONE_SUCCESS,\n        data: response.data\n      });\n    } else {\n      dispatch({\n        type: UPDATE_PHONE_ERROR\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/home/mksgalvao/Desktop/GuideSmiths_challenge/guide-smiths-challenge/frontend/src/actions/phonesActions.ts"],"names":["PhoneService","GET_PHONES_SUCCESS","GET_PHONES_ERROR","GET_PHONES_LOADING","DELETE_PHONE_SUCCESS","DELETE_PHONE_ERROR","DELETE_PHONE_LOADING","ADD_PHONE_SUCCESS","ADD_PHONE_ERROR","ADD_PHONE_LOADING","UPDATE_PHONE_SUCCESS","UPDATE_PHONE_ERROR","UPDATE_PHONE_LOADING","getPhonesList","dispatch","type","phonesService","getPhones","then","response","status","data","addPhone","phone","deletePhone","phoneId","updatePhone"],"mappings":"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","sourcesContent":["import { PhoneService } from \"../services/phoneService/phoneService\";\nimport { PhoneType } from \"../fixtures/phoneFixtures\";\nexport const GET_PHONES_SUCCESS = \"GET_PHONES_SUCCESS\";\nexport const GET_PHONES_ERROR = \"GET_PHONES_ERROR\";\nexport const GET_PHONES_LOADING = \"GET_PHONES_LOADING\";\nexport const DELETE_PHONE_SUCCESS = \"DELETE_PHONE_SUCCESS\";\nexport const DELETE_PHONE_ERROR = \"DELETE_PHONE_ERROR\";\nexport const DELETE_PHONE_LOADING = \"DELETE_PHONE_LOADING\";\nexport const ADD_PHONE_SUCCESS = \"ADD_PHONE_SUCCESS\";\nexport const ADD_PHONE_ERROR = \"ADD_PHONE_ERROR\";\nexport const ADD_PHONE_LOADING = \"ADD_PHONE_LOADING\";\nexport const UPDATE_PHONE_SUCCESS = \"UPDATE_PHONE_SUCCESS\";\nexport const UPDATE_PHONE_ERROR = \"UPDATE_PHONE_ERROR\";\nexport const UPDATE_PHONE_LOADING = \"UPDATE_PHONE_LOADING\";\n\nexport const getPhonesList = () => (dispatch: any) => {\n  dispatch({\n    type: GET_PHONES_LOADING,\n  });\n\n  const phonesService = new PhoneService(\"http://localhost:8080\");\n  phonesService.getPhones().then((response) => {\n    if (response.status === 200) {\n      dispatch({\n        type: GET_PHONES_SUCCESS,\n        data: response.data,\n      });\n    } else {\n      dispatch({\n        type: GET_PHONES_ERROR,\n      });\n    }\n  });\n};\n\nexport const addPhone = (phone: PhoneType) => (dispatch: any) => {\n  dispatch({\n    type: ADD_PHONE_LOADING,\n  });\n\n  const phonesService = new PhoneService(\"http://localhost:8080\");\n  phonesService.addPhone(phone).then((response) => {\n    if (response.status === 200) {\n      dispatch({\n        type: ADD_PHONE_SUCCESS,\n        data: response.data,\n      });\n    } else {\n      dispatch({\n        type: ADD_PHONE_ERROR,\n      });\n    }\n  });\n};\n\nexport const deletePhone = (phoneId: number) => (dispatch: any) => {\n  dispatch({\n    type: DELETE_PHONE_LOADING,\n  });\n\n  const phonesService = new PhoneService(\"http://localhost:8080\");\n  phonesService.deletePhone(phoneId).then((response) => {\n    if (response.status === 200) {\n      dispatch({\n        type: DELETE_PHONE_SUCCESS,\n        data: response.data,\n      });\n    } else {\n      dispatch({\n        type: DELETE_PHONE_ERROR,\n      });\n    }\n  });\n};\n\nexport const updatePhone = (phone: PhoneType) => (dispatch: any) => {\n  dispatch({\n    type: UPDATE_PHONE_LOADING,\n  });\n\n  const phonesService = new PhoneService(\"http://localhost:8080\");\n  phonesService.updatePhone(phone).then((response) => {\n    if (response.status === 200) {\n      dispatch({\n        type: UPDATE_PHONE_SUCCESS,\n        data: response.data,\n      });\n    } else {\n      dispatch({\n        type: UPDATE_PHONE_ERROR,\n      });\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}