{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mksgalvao/Desktop/GuideSmiths_challenge/guide-smiths-challenge/frontend/src/components/FormComponent/FormComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { Button, Dialog } from \"@material-ui/core\";\nimport { formComponentStyle } from \"./FormComponent.style\";\nexport const FormComponent = props => {\n  _s();\n\n  const classes = formComponentStyle();\n  const [open, setOpen] = React.useState(props.showModal.isOpen);\n  const rootRef = React.useRef(null);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      \"aria-labelledby\": \"server-modal-title\",\n      \"aria-describedby\": \"server-modal-description\",\n      className: classes.modal,\n      container: () => rootRef.current,\n      maxWidth: \"lg\",\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.title,\n        children: [props.showModal.type.toUpperCase(), \" Phone\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik //@ts-ignore\n      , {\n        initialValues: props.showModal.type === \"add\" ? {\n          phoneName: \"\",\n          price: \"\",\n          description: \"\",\n          manufacturer: \"\",\n          color: \"\",\n          imageFileName: \"\",\n          screen: \"\",\n          processor: \"\",\n          ram: \"\"\n        } : {\n          phoneName: props.phone.name,\n          price: props.phone.price,\n          description: props.phone.description,\n          manufacturer: props.phone.manufacturer,\n          color: props.phone.color,\n          imageFileName: props.phone.imageFileName,\n          screen: props.phone.screen,\n          processor: props.phone.processor,\n          ram: props.phone.ram\n        },\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n            setOpen(false);\n          }, 500);\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: classes.formRoot,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phoneName\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"phoneName\",\n            name: \"phoneName\",\n            placeholder: props.showModal.type === \"edit\" ? props.phone.name : \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"price\",\n            name: \"price\",\n            placeholder: props.showModal.type === \"edit\" ? props.phone.price : \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"color\",\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"color\",\n            name: \"color\",\n            placeholder: props.showModal.type === \"edit\" ? props.phone.color : \"color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"manufacturer\",\n            children: \"Manufacturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"manufacturer\",\n            name: \"manufacturer\",\n            placeholder: props.showModal.type === \"edit\" ? props.phone.manufacturer : \"manufacturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"screen\",\n            children: \"Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"screen\",\n            name: \"screen\",\n            placeholder: props.showModal.type === \"edit\" ? props.phone.screen : \"screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"processor\",\n            children: \"Processor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"processor\",\n            name: \"processor\",\n            placeholder: props.showModal.type === \"edit\" ? props.phone.processor : \"processor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ram\",\n            children: \"Ram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"ram\",\n            name: \"ram\",\n            placeholder: props.showModal.type === \"edit\" ? props.phone.ram : \"ram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"description\",\n            name: \"description\",\n            placeholder: props.showModal.type === \"edit\" ? props.phone.description : \"description\",\n            type: \"textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imageFileName\",\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"imageFileName\",\n            name: \"imageFileName\",\n            placeholder: props.showModal.type === \"edit\" ? props.phone.imageFileName : \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.submit,\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormComponent, \"HcgJ5yPG86I/8C4KWahoB7kS6cA=\");\n\n_c = FormComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"sources":["/home/mksgalvao/Desktop/GuideSmiths_challenge/guide-smiths-challenge/frontend/src/components/FormComponent/FormComponent.tsx"],"names":["React","Formik","Field","Form","Button","Dialog","formComponentStyle","FormComponent","props","classes","open","setOpen","useState","showModal","isOpen","rootRef","useRef","handleClose","modal","current","title","type","toUpperCase","phoneName","price","description","manufacturer","color","imageFileName","screen","processor","ram","phone","name","values","setSubmitting","setTimeout","alert","JSON","stringify","formRoot","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Field, Form, FormikHelpers } from \"formik\";\nimport { Button, Dialog } from \"@material-ui/core\";\nimport { formComponentStyle } from \"./FormComponent.style\";\nimport { PhoneType as Values } from \"../../fixtures/phoneFixtures\";\n\nexport const FormComponent = (props: any) => {\n  const classes = formComponentStyle();\n  const [open, setOpen] = React.useState(props.showModal.isOpen);\n  const rootRef = React.useRef<HTMLDivElement>(null);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <div>\n      <Dialog\n        open={open}\n        aria-labelledby=\"server-modal-title\"\n        aria-describedby=\"server-modal-description\"\n        className={classes.modal}\n        container={() => rootRef.current}\n        maxWidth=\"lg\"\n        onClose={handleClose}\n      >\n        <h1 className={classes.title}>\n          {props.showModal.type.toUpperCase()} Phone\n        </h1>\n        <Formik\n          //@ts-ignore\n          initialValues={\n            props.showModal.type === \"add\"\n              ? {\n                  phoneName: \"\",\n                  price: \"\",\n                  description: \"\",\n                  manufacturer: \"\",\n                  color: \"\",\n                  imageFileName: \"\",\n                  screen: \"\",\n                  processor: \"\",\n                  ram: \"\",\n                }\n              : {\n                  phoneName: props.phone.name,\n                  price: props.phone.price,\n                  description: props.phone.description,\n                  manufacturer: props.phone.manufacturer,\n                  color: props.phone.color,\n                  imageFileName: props.phone.imageFileName,\n                  screen: props.phone.screen,\n                  processor: props.phone.processor,\n                  ram: props.phone.ram,\n                }\n          }\n          onSubmit={(\n            values: Values,\n            { setSubmitting }: FormikHelpers<Values>\n          ) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n              setOpen(false);\n            }, 500);\n          }}\n        >\n          <Form className={classes.formRoot}>\n            <label htmlFor=\"phoneName\">Name</label>\n            <Field\n              id=\"phoneName\"\n              name=\"phoneName\"\n              placeholder={\n                props.showModal.type === \"edit\" ? props.phone.name : \"name\"\n              }\n            />\n            <label htmlFor=\"price\">Price</label>\n            <Field\n              id=\"price\"\n              name=\"price\"\n              placeholder={\n                props.showModal.type === \"edit\" ? props.phone.price : \"price\"\n              }\n            />\n            <label htmlFor=\"color\">Color</label>\n            <Field\n              id=\"color\"\n              name=\"color\"\n              placeholder={\n                props.showModal.type === \"edit\" ? props.phone.color : \"color\"\n              }\n            />\n            <label htmlFor=\"manufacturer\">Manufacturer</label>\n            <Field\n              id=\"manufacturer\"\n              name=\"manufacturer\"\n              placeholder={\n                props.showModal.type === \"edit\"\n                  ? props.phone.manufacturer\n                  : \"manufacturer\"\n              }\n            />\n            <label htmlFor=\"screen\">Screen</label>\n            <Field\n              id=\"screen\"\n              name=\"screen\"\n              placeholder={\n                props.showModal.type === \"edit\" ? props.phone.screen : \"screen\"\n              }\n            />\n            <label htmlFor=\"processor\">Processor</label>\n            <Field\n              id=\"processor\"\n              name=\"processor\"\n              placeholder={\n                props.showModal.type === \"edit\"\n                  ? props.phone.processor\n                  : \"processor\"\n              }\n            />\n            <label htmlFor=\"ram\">Ram</label>\n            <Field\n              id=\"ram\"\n              name=\"ram\"\n              placeholder={\n                props.showModal.type === \"edit\" ? props.phone.ram : \"ram\"\n              }\n            />\n            <label htmlFor=\"description\">Description</label>\n            <Field\n              id=\"description\"\n              name=\"description\"\n              placeholder={\n                props.showModal.type === \"edit\"\n                  ? props.phone.description\n                  : \"description\"\n              }\n              type=\"textarea\"\n            />\n            <label htmlFor=\"imageFileName\">Image URL</label>\n            <Field\n              id=\"imageFileName\"\n              name=\"imageFileName\"\n              placeholder={\n                props.showModal.type === \"edit\"\n                  ? props.phone.imageFileName\n                  : \"URL\"\n              }\n            />\n            <Button className={classes.submit} type=\"submit\">\n              Save\n            </Button>\n          </Form>\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}